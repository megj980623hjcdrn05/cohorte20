-- MySQL Script generated by MySQL Workbench
-- Mon Dec  5 16:18:06 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema prueba
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema prueba
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `prueba` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci ;
USE `prueba` ;

-- -----------------------------------------------------
-- Table `prueba`.`entidad`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `prueba`.`entidad` (
  `id` INT NOT NULL,
  `nombre` VARCHAR(45) NULL DEFAULT '0000',
  `apellido` VARCHAR(45) NULL DEFAULT NULL,
  `apellidoMaterno` VARCHAR(45) NULL DEFAULT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci
COMMENT = 'ejemplo de BD y de crear una tabla dentro de prueba';


-- -----------------------------------------------------
-- Table `prueba`.`productos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `prueba`.`productos` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NULL,
  `precio` INT NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `prueba`.`categorias`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `prueba`.`categorias` (
  `id` INT UNSIGNED NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `prueba`.`producto_categoria_R`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `prueba`.`producto_categoria_R` (
  `categorias_id` INT UNSIGNED NOT NULL,
  `productos_id` INT UNSIGNED NOT NULL,
  INDEX `fk_producto_categoria_R_categorias_idx` (`categorias_id` ASC) VISIBLE,
  INDEX `fk_producto_categoria_R_productos1_idx` (`productos_id` ASC) VISIBLE,
  CONSTRAINT `fk_producto_categoria_R_categorias`
    FOREIGN KEY (`categorias_id`)
    REFERENCES `prueba`.`categorias` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_producto_categoria_R_productos1`
    FOREIGN KEY (`productos_id`)
    REFERENCES `prueba`.`productos` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `prueba`.`perfil`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `prueba`.`perfil` (
  `id` INT NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `prueba`.`usuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `prueba`.`usuario` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NULL,
  `apellido` VARCHAR(45) NULL,
  `perfil_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_usuario_perfil1_idx` (`perfil_id` ASC) VISIBLE,
  CONSTRAINT `fk_usuario_perfil1`
    FOREIGN KEY (`perfil_id`)
    REFERENCES `prueba`.`perfil` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `prueba`.`sistemas_pago`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `prueba`.`sistemas_pago` (
  `id` INT NOT NULL,
  `nombre` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `prueba`.`orden`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `prueba`.`orden` (
  `id` INT NOT NULL,
  `fecha` DATE NULL,
  `usuario_id` INT NOT NULL,
  `sistemas_pago_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_orden_usuario1_idx` (`usuario_id` ASC) VISIBLE,
  INDEX `fk_orden_sistemas_pago1_idx` (`sistemas_pago_id` ASC) VISIBLE,
  CONSTRAINT `fk_orden_usuario1`
    FOREIGN KEY (`usuario_id`)
    REFERENCES `prueba`.`usuario` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_orden_sistemas_pago1`
    FOREIGN KEY (`sistemas_pago_id`)
    REFERENCES `prueba`.`sistemas_pago` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `prueba`.`orden_Producto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `prueba`.`orden_Producto` (
  `id` INT NOT NULL,
  `productos_id` INT UNSIGNED NOT NULL,
  `orden_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_orden_Producto_productos1_idx` (`productos_id` ASC) VISIBLE,
  INDEX `fk_orden_Producto_orden1_idx` (`orden_id` ASC) VISIBLE,
  CONSTRAINT `fk_orden_Producto_productos1`
    FOREIGN KEY (`productos_id`)
    REFERENCES `prueba`.`productos` (`id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_orden_Producto_orden1`
    FOREIGN KEY (`orden_id`)
    REFERENCES `prueba`.`orden` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `prueba`.`lugar_orden`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `prueba`.`lugar_orden` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `ciudad` VARCHAR(45) NOT NULL,
  `estado` VARCHAR(45) NOT NULL,
  `orden_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_lugar_orden_orden1_idx` (`orden_id` ASC) VISIBLE,
  CONSTRAINT `fk_lugar_orden_orden1`
    FOREIGN KEY (`orden_id`)
    REFERENCES `prueba`.`orden` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
